{"version":3,"sources":["PersonForm.js","Persons.js","Filter.js","services/person.js","Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Persons","persons","handleDelete","map","props","name","number","onClick","id","Filter","handleSearch","newSearch","baseUrl","axios","get","newObject","post","delete","updateObject","console","log","put","Notification","errormessage","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","errorMessage","setErrorMessage","setMessage","useEffect","personService","then","res","data","catch","err","copy","personToShow","filter","person","toLowerCase","includes","event","target","preventDefault","some","window","confirm","updatePerson","personObject","setTimeout","alert","ReactDOM","render","document","getElementById"],"mappings":"qKAoBeA,EAlBI,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,UAAWC,EAAiE,EAAjEA,QAASC,EAAwD,EAAxDA,mBAAoBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACrE,OACI,8BACI,uBAAMC,SAAUL,EAAhB,UACI,yCACU,uBAAOM,MAAOL,EAASM,SAAUL,OAE3C,2CACY,uBAAOI,MAAOH,EAAWI,SAAUH,OAE/C,8BACI,wBAAQI,KAAK,SAAb,yBCLLC,EARC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aACxB,OACI,8BACKD,EAAQE,KAAI,SAACC,GAAD,OAAW,gCAAoB,8BAAqBA,EAAMC,KAA3B,IAAkCD,EAAME,SAAhCF,EAAMC,MAAqC,wBAA2BE,QAAS,kBAAML,EAAaE,IAAvD,mBAAaA,EAAME,UAAhFF,EAAMI,UCKrCC,MARf,YAA8C,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UAC5B,OACI,8BACI,oDAAsB,uBAAOd,MAAOc,EAAWb,SAAUY,U,gBCF/DE,EAAU,eAkBD,EAhBA,WACX,OAAOC,IAAMC,IAAIF,IAeN,EAZA,SAAAG,GACX,OAAOF,IAAMG,KAAKJ,EAASG,IAWhB,EARM,SAAAP,GACjB,OAAOK,IAAMI,OAAN,sBAA4BT,KAOxB,EALM,SAACA,EAAIU,GAEtB,OADAC,QAAQC,IAAIZ,EAAIU,GACTL,IAAMQ,IAAN,sBAAyBb,GAAMU,ICJ3BI,EAZM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAClC,OAAgB,OAAZA,GAAqC,OAAjBD,EACb,KAGP,gCACsB,OAAjBA,EAAwB,qBAAKE,UAAU,QAAf,SAAwBF,IAAsB,wBAC1D,OAAZC,EAAmB,qBAAKC,UAAU,UAAf,SAA0BD,IAAiB,4BCmI5DE,EAlIH,WAER,MAA8BC,mBAAS,IAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAA8BD,mBAAS,IAAvC,mBAAOnC,EAAP,KAAgBqC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOjC,EAAP,KAAkBoC,EAAlB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOhB,EAAP,KAAkBoB,EAAlB,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA8BN,mBAAS,MAAvC,mBAAOH,EAAP,KAAgBU,EAAhB,KAEAC,qBAAU,WACNhB,QAAQC,IAAI,yBACZgB,IAEKC,MAAK,SAAAC,GACFnB,QAAQC,IAAI,oBACZQ,EAAWU,EAAIC,SAElBC,OAAM,SAAAC,GACHtB,QAAQC,IAAIqB,QAErB,IAEH,IA4FMC,EAAOzC,EACP0C,EAA6B,KAAdhC,EAAmB+B,EAAKE,QAAO,SAACC,GAAa,OAAOA,EAAOxC,KAAKyC,cAAcC,SAASpC,EAAUmC,kBAAoBJ,EAE1I,OACI,gCACI,2CACA,cAAC,EAAD,CAAcnB,aAAcS,EAAcR,QAASA,IACnD,cAAC,EAAD,CAAQd,aAlCK,SAACsC,GAClBjB,EAAaiB,EAAMC,OAAOpD,QAiCcc,UAAWA,IAC/C,2CACA,cAAC,EAAD,CAAYpB,UArGF,SAACyD,GAEf,GADAA,EAAME,iBACFjD,EAAQkD,MAAK,SAACN,GAAa,OAAQA,EAAOxC,OAASb,KACnD,GAAIS,EAAQkD,MAAK,SAACN,GAAa,OAAQA,EAAOvC,SAAWZ,MACrD,GAAI0D,OAAOC,QAAP,UAAkB7D,EAAlB,gFAAyG,CACzG,IAAM8D,EAAerD,EAAQ2C,QAAO,SAACC,GAAa,OAAOA,EAAOxC,OAASb,KACzE2B,QAAQC,IAAIkC,GACZ,IAAMC,EAAeD,EAAa,GAC5BpC,EAAe,CAAEb,KAAMb,EAASc,OAAQZ,GACxCc,EAAK+C,EAAa/C,GACxBW,QAAQC,IAAIZ,GACZ4B,EACkB5B,EAAIU,GACjBmB,MAAK,SAAAC,GACFJ,EAAW,GAAD,OACH1C,EADG,gCAC4BE,IAEtC8D,YAAW,WACPtB,EAAW,QACZ,QAENM,OAAM,SAAAC,GACHR,EAAgB,kBAAD,OACOzC,EADP,0CAGfgE,YAAW,WACPvB,EAAgB,QACjB,cAIfmB,OAAOK,MAAP,UAAgBjE,EAAhB,wCAED,GAAIS,EAAQkD,MAAK,SAACN,GAAa,OAAQA,EAAOvC,SAAWZ,KAC5D0D,OAAOK,MAAP,UAAgB/D,EAAhB,uCACG,CAKH0C,EAJqB,CACjB/B,KAAMb,EACNc,OAAQZ,IAIP2C,MAAK,SAAAC,GACFJ,EAAW,SAAD,OACG1C,IAEbgE,YAAW,WACPtB,EAAW,QACZ,QAENM,OAAM,SAAAC,GACHtB,QAAQC,IAAIqB,MAEpBZ,EAAW,IACXC,EAAa,MA+CqBnC,mBAxCf,SAACqD,GACxBlB,EAAakB,EAAMC,OAAOpD,QAuCoDJ,mBA5CvD,SAACuD,GACxBnB,EAAWmB,EAAMC,OAAOpD,QA2C8FL,QAASA,EAASE,UAAWA,IAC/I,yCACA,cAAC,EAAD,CAASO,QAAS0C,EAAczC,aAnCnB,SAACE,GAClB,IAAMI,EAAKJ,EAAMI,GACjBW,QAAQC,IAAIhB,GACRgD,OAAOC,QAAP,iBAAyBjD,EAAMC,KAA/B,OACA+B,EACkB5B,GACb6B,MAAK,SAAAC,GACFL,EAAgB,GAAD,OACR7B,EAAMC,KADE,+BAGfmD,YAAW,WACPvB,EAAgB,QACjB,QAENO,OAAM,SAAAC,GACHR,EAAgB,iDAGhBuB,YAAW,WACPvB,EAAgB,QACjB,e,MCjHvByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a885b1aa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({ addPerson, newName, handlePersonChange, newNumber, handleNumberChange }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={addPerson}>\r\n                <div>\r\n                    name: <input value={newName} onChange={handlePersonChange} />\r\n                </div>\r\n                <div>\r\n                    number: <input value={newNumber} onChange={handleNumberChange} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm;\r\n","const Persons = ({ persons, handleDelete }) => {\r\n    return (\r\n        <div>\r\n            {persons.map((props) => <div key={props.id}><p key={props.name}>{props.name} {props.number}</p><button key={props.number} onClick={() => handleDelete(props)}>Delete</button></div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","function Filter({ handleSearch, newSearch }) {\r\n    return (\r\n        <div>\r\n            <h3>filter shown with <input value={newSearch} onChange={handleSearch} /></h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst deleteNumber = id => {\r\n    return axios.delete(`/api/persons${id}`)\r\n}\r\nconst updateNumber = (id, updateObject) => {\r\n    console.log(id, updateObject);\r\n    return axios.put(`/api/persons${id}`, updateObject)\r\n}\r\n\r\nexport default { getAll, create, deleteNumber, updateNumber }\r\n","const Notification = ({ errormessage, message }) => {\r\n    if (message === null && errormessage === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div>\r\n            {errormessage !== null ? <div className=\"error\">{errormessage}</div> : <div></div>}\r\n            {message !== null ? <div className=\"message\">{message}</div> : <div></div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\r\nimport PersonForm from './PersonForm';\r\nimport Persons from './Persons';\r\nimport Filter from './Filter';\r\nimport personService from './services/person';\r\nimport Notification from './Notification';\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [newSearch, setNewSearch] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        console.log(\"Use Effect is running\")\r\n        personService\r\n            .getAll()\r\n            .then(res => {\r\n                console.log(\"data has arrived\")\r\n                setPersons(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        if (persons.some((person) => { return (person.name === newName) })) {\r\n            if (persons.some((person) => { return (person.number !== newNumber) })) {\r\n                if (window.confirm(`${newName} has already added to the phonebook, replace the old number with a new one?`)) {\r\n                    const updatePerson = persons.filter((person) => { return person.name === newName })\r\n                    console.log(updatePerson);\r\n                    const personObject = updatePerson[0]\r\n                    const updateObject = { name: newName, number: newNumber }\r\n                    const id = personObject.id\r\n                    console.log(id)\r\n                    personService\r\n                        .updateNumber(id, updateObject)\r\n                        .then(res => {\r\n                            setMessage(\r\n                                `${newName}'s number changed to ${newNumber}`\r\n                            )\r\n                            setTimeout(() => {\r\n                                setMessage(null)\r\n                            }, 5000)\r\n                        })\r\n                        .catch(err => {\r\n                            setErrorMessage(\r\n                                `Information of ${newName} has already been removed from server`\r\n                            )\r\n                            setTimeout(() => {\r\n                                setErrorMessage(null)\r\n                            }, 5000)\r\n                        })\r\n                }\r\n            } else {\r\n                window.alert(`${newName} is already added to phonebook`)\r\n            }\r\n        } else if (persons.some((person) => { return (person.number === newNumber) })) {\r\n            window.alert(`${newNumber} is already added to phonebook`)\r\n        } else {\r\n            const personObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .create(personObject)\r\n                .then(res => {\r\n                    setMessage(\r\n                        `Added ${newName}`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }\r\n    }\r\n    const handlePersonChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleSearch = (event) => {\r\n        setNewSearch(event.target.value)\r\n    }\r\n    const handleDelete = (props) => {\r\n        const id = props.id\r\n        console.log(props)\r\n        if (window.confirm(`Delete ${props.name}?`)) {\r\n            personService\r\n                .deleteNumber(id)\r\n                .then(res => {\r\n                    setErrorMessage(\r\n                        `${props.name}'s number has been deleted`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n                .catch(err => {\r\n                    setErrorMessage(\r\n                        `Error in deleting the number.Please Try again`\r\n                    )\r\n                    setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n    const copy = persons;\r\n    const personToShow = newSearch !== '' ? copy.filter((person) => { return person.name.toLowerCase().includes(newSearch.toLowerCase()) }) : copy;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification errormessage={errorMessage} message={message} />\r\n            <Filter handleSearch={handleSearch} newSearch={newSearch} />\r\n            <h3>add a new</h3>\r\n            <PersonForm addPerson={addPerson} handleNumberChange={handleNumberChange} handlePersonChange={handlePersonChange} newName={newName} newNumber={newNumber} />\r\n            <h3>Numbers</h3>\r\n            <Persons persons={personToShow} handleDelete={handleDelete} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}